main.py: args:  Namespace(name='metatest_in', job_id='0', path='../results/', data_path='./dataset', seed=21, eval=False, eval_prefix='', hp_setting='in_metanas', use_hp_setting=1, workers=4, print_freq=1, use_torchmeta_loader=True, dataset='miniimagenet', use_vinyals_split=False, gpus=[0], meta_model='searchcnn', model_path=None, meta_epochs=30000, start_epoch=1, meta_batch_size=5, test_meta_batch_size=1, eval_epochs=0, eval_freq=1500, task_train_steps=1, test_task_train_steps=10, warm_up_epochs=15000, test_adapt_steps=1.0, w_meta_optim=None, w_meta_lr=0.001, w_meta_anneal=1, w_task_anneal=0, a_meta_optim=None, a_meta_lr=0.001, a_meta_anneal=1, a_task_anneal=0, normalizer='softmax', normalizer_temp_anneal_mode='linear', normalizer_t_max=1.0, normalizer_t_min=0.1, n=5, n_train=15, k=5, q=1, batch_size=64, w_lr=0.025, w_momentum=0.0, w_weight_decay=0.0, w_grad_clip=1000000.0, drop_path_prob=0.2, use_drop_path_in_meta_testing=False, init_channels=28, layers=4, nodes=3, use_hierarchical_alphas=False, use_pairwise_input_alphas=True, reduction_layers=[1, 3], alpha_lr=0.0003, alpha_prune_threshold=0.01, meta_model_prune_threshold=0.01, alpha_weight_decay=0.001, anneal_softmax_temperature=False, do_unrolled_architecture_steps=False, use_first_order_darts=True, sparsify_input_alphas=None, exp_const=1, exp_cell=1, wandb=0, wandb_name='lab_pc', const_mult=1, unittest=0, cell_const_mult=1, cell_const_flag=0, light_exp=0, opsample=1, sampleno=7, naivenaive=0, cell_phase=2, cell_idx=0, previous_grad=None, pprevious_grad=None, alpha_previous_grad=None, alpha_pprevious_grad=None, eval_switch=0, residual_flag=0, beta_sampling=0, alpha_grad_footprints=[], alpha_sample_metrics=None, total_steps=0, alpha_expect=0, grad_acc=None, split_num=1, loss_track=[], loss_val_track=[], computing_time=0.0, naivesample=0, memory_snap=0.0, exp_name=None, step_by_step=0, stackup_phase=0, prohibited_list=[], plot_path='../results/plots', device=device(type='cuda'), logger=<Logger darts (INFO)>)
torchmeta_loader.py: create_miniimagenet_data_loader: root ./dataset
torchmeta_loader.py: create_miniimagenet_data_loader: n_shot 15
torchmeta_loader.py: create_miniimagenet_data_loader: k_way 5
torchmeta_loader.py: create_miniimagenet_data_loader: meta_split train
torchmeta_loader.py: create_miniimagenet_data_loader: n_query 1
torchmeta_loader.py: create_miniimagenet_data_loader: download False
miniimagenet.py: MiniimagenetClassDataset: self.split_filename:  ./dataset/miniimagenet/train_data.hdf5
miniimagenet.py: MiniimagenetClassDataset: self.split_filename_labels:  ./dataset/miniimagenet/train_labels.json
